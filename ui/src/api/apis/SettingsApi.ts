/* eslint-disable */
/**
 * Engawa
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RequirementsCheckResult,
} from '../models/index';
import {
    RequirementsCheckResultFromJSON,
    RequirementsCheckResultToJSON,
} from '../models/index';

/**
 * 
 */
export class SettingsApi extends runtime.BaseAPI {

    /**
     * Check Requirements
     */
    async checkRequirementsApiSettingsRequirementsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequirementsCheckResult>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/settings/requirements`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RequirementsCheckResultFromJSON(jsonValue));
    }

    /**
     * Check Requirements
     */
    async checkRequirementsApiSettingsRequirementsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequirementsCheckResult> {
        const response = await this.checkRequirementsApiSettingsRequirementsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Reset Database
     */
    async resetDatabaseApiSettingsResetPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/settings/reset`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Reset Database
     */
    async resetDatabaseApiSettingsResetPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.resetDatabaseApiSettingsResetPostRaw(initOverrides);
        return await response.value();
    }

}
