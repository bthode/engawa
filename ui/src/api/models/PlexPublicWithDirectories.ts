/* tslint:disable */
/* eslint-disable */
/**
 * Engawa
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ErrorState } from './ErrorState';
import {
    ErrorStateFromJSON,
    ErrorStateFromJSONTyped,
    ErrorStateToJSON,
    ErrorStateToJSONTyped,
} from './ErrorState';
import type { DirectoryPublic } from './DirectoryPublic';
import {
    DirectoryPublicFromJSON,
    DirectoryPublicFromJSONTyped,
    DirectoryPublicToJSON,
    DirectoryPublicToJSONTyped,
} from './DirectoryPublic';

/**
 * 
 * @export
 * @interface PlexPublicWithDirectories
 */
export interface PlexPublicWithDirectories {
    /**
     * 
     * @type {string}
     * @memberof PlexPublicWithDirectories
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof PlexPublicWithDirectories
     */
    id: number;
    /**
     * 
     * @type {Array<DirectoryPublic>}
     * @memberof PlexPublicWithDirectories
     */
    directories?: Array<DirectoryPublic>;
    /**
     * 
     * @type {string}
     * @memberof PlexPublicWithDirectories
     */
    endpoint: string;
    /**
     * 
     * @type {string}
     * @memberof PlexPublicWithDirectories
     */
    port: string;
    /**
     * 
     * @type {ErrorState}
     * @memberof PlexPublicWithDirectories
     */
    errorState?: ErrorState | null;
}



/**
 * Check if a given object implements the PlexPublicWithDirectories interface.
 */
export function instanceOfPlexPublicWithDirectories(value: object): value is PlexPublicWithDirectories {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('endpoint' in value) || value['endpoint'] === undefined) return false;
    if (!('port' in value) || value['port'] === undefined) return false;
    return true;
}

export function PlexPublicWithDirectoriesFromJSON(json: any): PlexPublicWithDirectories {
    return PlexPublicWithDirectoriesFromJSONTyped(json, false);
}

export function PlexPublicWithDirectoriesFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlexPublicWithDirectories {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'id': json['id'],
        'directories': json['directories'] == null ? undefined : ((json['directories'] as Array<any>).map(DirectoryPublicFromJSON)),
        'endpoint': json['endpoint'],
        'port': json['port'],
        'errorState': json['error_state'] == null ? undefined : ErrorStateFromJSON(json['error_state']),
    };
}

  export function PlexPublicWithDirectoriesToJSON(json: any): PlexPublicWithDirectories {
      return PlexPublicWithDirectoriesToJSONTyped(json, false);
  }

  export function PlexPublicWithDirectoriesToJSONTyped(value?: PlexPublicWithDirectories | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'id': value['id'],
        'directories': value['directories'] == null ? undefined : ((value['directories'] as Array<any>).map(DirectoryPublicToJSON)),
        'endpoint': value['endpoint'],
        'port': value['port'],
        'error_state': ErrorStateToJSON(value['errorState']),
    };
}

