/* eslint-disable */
/**
 * Engawa
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ComparisonOperator } from './ComparisonOperator';
import {
    ComparisonOperatorFromJSON,
    ComparisonOperatorFromJSONTyped,
    ComparisonOperatorToJSON,
    ComparisonOperatorToJSONTyped,
} from './ComparisonOperator';
import type { FilterType } from './FilterType';
import {
    FilterTypeFromJSON,
    FilterTypeFromJSONTyped,
    FilterTypeToJSON,
    FilterTypeToJSONTyped,
} from './FilterType';

/**
 * 
 * @export
 * @interface Filter
 */
export interface Filter {
    /**
     * 
     * @type {number}
     * @memberof Filter
     */
    id?: number | null;
    /**
     * 
     * @type {FilterType}
     * @memberof Filter
     */
    filterType: FilterType;
    /**
     * 
     * @type {string}
     * @memberof Filter
     */
    keyword?: string | null;
    /**
     * 
     * @type {ComparisonOperator}
     * @memberof Filter
     */
    comparisonOperator?: ComparisonOperator | null;
    /**
     * 
     * @type {number}
     * @memberof Filter
     */
    thresholdSeconds?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof Filter
     */
    thresholdDate?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof Filter
     */
    subscriptionId?: number | null;
}



/**
 * Check if a given object implements the Filter interface.
 */
export function instanceOfFilter(value: object): value is Filter {
    if (!('filterType' in value) || value['filterType'] === undefined) return false;
    return true;
}

export function FilterFromJSON(json: any): Filter {
    return FilterFromJSONTyped(json, false);
}

export function FilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): Filter {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'filterType': FilterTypeFromJSON(json['filter_type']),
        'keyword': json['keyword'] == null ? undefined : json['keyword'],
        'comparisonOperator': json['comparison_operator'] == null ? undefined : ComparisonOperatorFromJSON(json['comparison_operator']),
        'thresholdSeconds': json['threshold_seconds'] == null ? undefined : json['threshold_seconds'],
        'thresholdDate': json['threshold_date'] == null ? undefined : (new Date(json['threshold_date'])),
        'subscriptionId': json['subscription_id'] == null ? undefined : json['subscription_id'],
    };
}

  export function FilterToJSON(json: any): Filter {
      return FilterToJSONTyped(json, false);
  }

  export function FilterToJSONTyped(value?: Filter | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'filter_type': FilterTypeToJSON(value['filterType']),
        'keyword': value['keyword'],
        'comparison_operator': ComparisonOperatorToJSON(value['comparisonOperator']),
        'threshold_seconds': value['thresholdSeconds'],
        'threshold_date': value['thresholdDate'] == null ? undefined : ((value['thresholdDate'] as any).toISOString()),
        'subscription_id': value['subscriptionId'],
    };
}

