/* tslint:disable */
/* eslint-disable */
/**
 * Engawa
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SubscriptionType } from './SubscriptionType';
import {
    SubscriptionTypeFromJSON,
    SubscriptionTypeFromJSONTyped,
    SubscriptionTypeToJSON,
    SubscriptionTypeToJSONTyped,
} from './SubscriptionType';
import type { SubscriptionDirectoryError } from './SubscriptionDirectoryError';
import {
    SubscriptionDirectoryErrorFromJSON,
    SubscriptionDirectoryErrorFromJSONTyped,
    SubscriptionDirectoryErrorToJSON,
    SubscriptionDirectoryErrorToJSONTyped,
} from './SubscriptionDirectoryError';

/**
 * 
 * @export
 * @interface Subscription
 */
export interface Subscription {
    /**
     * 
     * @type {string}
     * @memberof Subscription
     */
    description?: string;
    /**
     * 
     * @type {SubscriptionDirectoryError}
     * @memberof Subscription
     */
    errorState?: SubscriptionDirectoryError | null;
    /**
     * 
     * @type {number}
     * @memberof Subscription
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Subscription
     */
    image?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Subscription
     */
    lastUpdated?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Subscription
     */
    rssFeedUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof Subscription
     */
    title?: string;
    /**
     * 
     * @type {SubscriptionType}
     * @memberof Subscription
     */
    type?: SubscriptionType;
    /**
     * 
     * @type {string}
     * @memberof Subscription
     */
    url?: string;
}



/**
 * Check if a given object implements the Subscription interface.
 */
export function instanceOfSubscription(value: object): value is Subscription {
    return true;
}

export function SubscriptionFromJSON(json: any): Subscription {
    return SubscriptionFromJSONTyped(json, false);
}

export function SubscriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Subscription {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'] == null ? undefined : json['description'],
        'errorState': json['error_state'] == null ? undefined : SubscriptionDirectoryErrorFromJSON(json['error_state']),
        'id': json['id'] == null ? undefined : json['id'],
        'image': json['image'] == null ? undefined : json['image'],
        'lastUpdated': json['last_updated'] == null ? undefined : (new Date(json['last_updated'])),
        'rssFeedUrl': json['rss_feed_url'] == null ? undefined : json['rss_feed_url'],
        'title': json['title'] == null ? undefined : json['title'],
        'type': json['type'] == null ? undefined : SubscriptionTypeFromJSON(json['type']),
        'url': json['url'] == null ? undefined : json['url'],
    };
}

  export function SubscriptionToJSON(json: any): Subscription {
      return SubscriptionToJSONTyped(json, false);
  }

  export function SubscriptionToJSONTyped(value?: Subscription | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'description': value['description'],
        'error_state': SubscriptionDirectoryErrorToJSON(value['errorState']),
        'id': value['id'],
        'image': value['image'],
        'last_updated': value['lastUpdated'] == null ? undefined : ((value['lastUpdated'] as any).toISOString()),
        'rss_feed_url': value['rssFeedUrl'],
        'title': value['title'],
        'type': SubscriptionTypeToJSON(value['type']),
        'url': value['url'],
    };
}

