/* tslint:disable */
/* eslint-disable */
/**
 * Engawa
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VideoStatus } from './VideoStatus';
import {
    VideoStatusFromJSON,
    VideoStatusFromJSONTyped,
    VideoStatusToJSON,
    VideoStatusToJSONTyped,
} from './VideoStatus';

/**
 * 
 * @export
 * @interface Video
 */
export interface Video {
    /**
     * 
     * @type {number}
     * @memberof Video
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Video
     */
    author: string;
    /**
     * 
     * @type {number}
     * @memberof Video
     */
    duration?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Video
     */
    description: string | null;
    /**
     * 
     * @type {string}
     * @memberof Video
     */
    link: string;
    /**
     * 
     * @type {Date}
     * @memberof Video
     */
    published?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof Video
     */
    retryCount?: number;
    /**
     * 
     * @type {VideoStatus}
     * @memberof Video
     */
    status: VideoStatus;
    /**
     * 
     * @type {number}
     * @memberof Video
     */
    subscriptionId?: number;
    /**
     * 
     * @type {string}
     * @memberof Video
     */
    thumbnailUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Video
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Video
     */
    videoId: string;
}



/**
 * Check if a given object implements the Video interface.
 */
export function instanceOfVideo(value: object): value is Video {
    if (!('author' in value) || value['author'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('link' in value) || value['link'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('videoId' in value) || value['videoId'] === undefined) return false;
    return true;
}

export function VideoFromJSON(json: any): Video {
    return VideoFromJSONTyped(json, false);
}

export function VideoFromJSONTyped(json: any, ignoreDiscriminator: boolean): Video {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'author': json['author'],
        'duration': json['duration'] == null ? undefined : json['duration'],
        'description': json['description'],
        'link': json['link'],
        'published': json['published'] == null ? undefined : (new Date(json['published'])),
        'retryCount': json['retry_count'] == null ? undefined : json['retry_count'],
        'status': VideoStatusFromJSON(json['status']),
        'subscriptionId': json['subscription_id'] == null ? undefined : json['subscription_id'],
        'thumbnailUrl': json['thumbnail_url'] == null ? undefined : json['thumbnail_url'],
        'title': json['title'],
        'videoId': json['video_id'],
    };
}

  export function VideoToJSON(json: any): Video {
      return VideoToJSONTyped(json, false);
  }

  export function VideoToJSONTyped(value?: Video | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'author': value['author'],
        'duration': value['duration'],
        'description': value['description'],
        'link': value['link'],
        'published': value['published'] == null ? undefined : ((value['published'] as any).toISOString()),
        'retry_count': value['retryCount'],
        'status': VideoStatusToJSON(value['status']),
        'subscription_id': value['subscriptionId'],
        'thumbnail_url': value['thumbnailUrl'],
        'title': value['title'],
        'video_id': value['videoId'],
    };
}

